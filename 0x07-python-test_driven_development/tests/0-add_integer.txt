add_integer function
===================

the add integer function adds two integers 

>>> add_integer = __import__('0-add_integer').add_integer
>>> add_integer(1, 4)
5
>>> add_integer(1.9, 1.9)
2
>>> add_integer(4, "School")
Traceback (most recent call last):
  File "/usr/lib/python3.8/doctest.py", line 1336, in __run
    exec(compile(example.source, filename, "single",
  File "<doctest 0-add_integer.txt[3]>", line 1, in <module>
    add_integer(4, "School")
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 16, in add_integer
    raise TypeError("b must be an integar")
TypeError: b must be an integer
>>> add_integer(None)
Traceback (most recent call last):
  File "/usr/lib/python3.8/doctest.py", line 1336, in __run
    exec(compile(example.source, filename, "single",
  File "<doctest 0-add_integer.txt[4]>", line 1, in <module>
    add_integer(None)
  File "/root/alx-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 14, in add_integer
    raise TypeError("a must be an integar")
TypeError: a must be an integer
>>> add_integer(0, -2)
-2
>>> add_integer(0, 0.9)
0
>>> add_integer(-2, -4)
-6
>>> add_integer(0, 3)
3
